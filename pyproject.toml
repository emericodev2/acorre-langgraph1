[build-system]
requires = ["setuptools>=64", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "multi-rag-system"
version = "1.0.0"
description = "A comprehensive Multi-RAG system with LangGraph orchestration for website, document, and LLM search"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Your Name", email = "your.email@example.com"},
]
maintainers = [
    {name = "Your Name", email = "your.email@example.com"},
]
keywords = [
    "rag",
    "retrieval-augmented-generation", 
    "langgraph",
    "langchain",
    "openai",
    "vector-search",
    "document-processing",
    "nlp",
    "ai",
    "machine-learning"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
]
requires-python = ">=3.9"
dependencies = [
    # Core LangGraph and LangChain
    "langgraph>=0.2.0",
    "langchain>=0.2.0",
    "langchain-openai>=0.1.0",
    "langchain-community>=0.2.0",
    "langchain-core>=0.2.0",
    
    # OpenAI
    "openai>=1.30.0",
    
    # Vector stores and embeddings
    "faiss-cpu>=1.8.0",
    "tiktoken>=0.7.0",
    
    # Web scraping and requests
    "requests>=2.31.0",
    "beautifulsoup4>=4.12.0",
    "lxml>=4.9.0",
    "html5lib>=1.1",
    
    # Document processing
    "PyPDF2>=3.0.0",
    "python-docx>=1.1.0",
    "python-magic>=0.4.27",
    "chardet>=5.2.0",
    
    # API framework
    "fastapi>=0.110.0",
    "uvicorn[standard]>=0.29.0",
    "pydantic>=2.7.0",
    "python-multipart>=0.0.9",
    
    # HTTP client for examples
    "aiohttp>=3.9.0",
    
    # Data processing
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    
    # Utilities
    "python-dotenv>=1.0.0",
    "asyncio-throttle>=1.0.2",
    "tenacity>=8.2.0",
]

[project.optional-dependencies]
# Development dependencies
dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=4.1.0",
    "black>=24.0.0",
    "isort>=5.13.0",
    "flake8>=7.0.0",
    "mypy>=1.10.0",
    "pre-commit>=3.7.0",
    "bandit>=1.7.0",
]

# GPU support
gpu = [
    "faiss-gpu>=1.8.0",
]

# Enhanced document processing
docs = [
    "pypdf>=4.2.0",
    "pdfplumber>=0.11.0",
    "markdown>=3.6.0",
    "python-pptx>=0.6.23",
    "openpyxl>=3.1.0",
    "xlrd>=2.0.0",
]

# Monitoring and observability
monitoring = [
    "prometheus-client>=0.20.0",
    "structlog>=24.1.0",
    "sentry-sdk[fastapi]>=2.0.0",
]

# Production deployment
prod = [
    "gunicorn>=22.0.0",
    "prometheus-fastapi-instrumentator>=7.0.0",
    "slowapi>=0.1.9",
]

# All optional dependencies
all = [
    "multi-rag-system[dev,gpu,docs,monitoring,prod]"
]

[project.urls]
Homepage = "https://github.com/yourusername/multi-rag-system"
Documentation = "https://github.com/yourusername/multi-rag-system#readme"
Repository = "https://github.com/yourusername/multi-rag-system.git"
"Bug Reports" = "https://github.com/yourusername/multi-rag-system/issues"
Changelog = "https://github.com/yourusername/multi-rag-system/blob/main/CHANGELOG.md"

[project.scripts]
multi-rag = "multi_rag_system.cli:main"
multi-rag-server = "api_service:main"

[project.entry-points."langgraph.graphs"]
multi-rag = "main:create_graph"

# Tool configurations
[tool.setuptools]
py-modules = ["main", "api_service", "client_example", "deployment_script"]

[tool.setuptools.packages.find]
where = ["."]
include = ["multi_rag_system*"]
exclude = ["tests*", "docs*", "examples*"]

[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.flake8]
max-line-length = 88
extend-ignore = [
    "E203",  # whitespace before ':'
    "E501",  # line too long (handled by black)
    "W503",  # line break before binary operator
]
exclude = [
    ".git",
    "__pycache__",
    "dist",
    "build",
    ".eggs",
    "*.egg-info",
    ".venv",
    ".tox",
]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "faiss.*",
    "PyPDF2.*",
    "docx2txt.*",
    "bs4.*",
    "langchain.*",
    "langgraph.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    "-ra",
    "-q",
    "--strict-markers",
    "--strict-config",
    "--cov=multi_rag_system",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
testpaths = [
    "tests",
]
python_files = [
    "test_*.py",
    "*_test.py",
]
python_classes = [
    "Test*",
]
python_functions = [
    "test_*",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "api: marks tests as API tests",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["multi_rag_system"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/site-packages/*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[tool.bandit]
exclude_dirs = ["tests", "venv", ".venv"]
skips = ["B101", "B601"]

[tool.pre-commit]
repos = [
    {
        repo = "https://github.com/pre-commit/pre-commit-hooks",
        rev = "v4.5.0",
        hooks = [
            {id = "trailing-whitespace"},
            {id = "end-of-file-fixer"},
            {id = "check-yaml"},
            {id = "check-added-large-files"},
            {id = "check-merge-conflict"},
        ]
    },
    {
        repo = "https://github.com/psf/black",
        rev = "24.3.0",
        hooks = [
            {id = "black"}
        ]
    },
    {
        repo = "https://github.com/pycqa/isort",
        rev = "5.13.2", 
        hooks = [
            {id = "isort"}
        ]
    },
    {
        repo = "https://github.com/pycqa/flake8",
        rev = "7.0.0",
        hooks = [
            {id = "flake8"}
        ]
    },
    {
        repo = "https://github.com/pre-commit/mirrors-mypy",
        rev = "v1.9.0",
        hooks = [
            {id = "mypy", additional_dependencies = ["types-requests", "types-PyYAML"]}
        ]
    },
    {
        repo = "https://github.com/PyCQA/bandit",
        rev = "1.7.8",
        hooks = [
            {id = "bandit", args = ["-c", "pyproject.toml"]}
        ]
    }
]

# Environment and dependency management
[tool.pip-tools]
generate-hashes = true
upgrade = true

# Ruff configuration (alternative to flake8)
[tool.ruff]
target-version = "py39"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["B011"]

[tool.ruff.mccabe]
max-complexity = 10

# Documentation build
[tool.sphinx]
source-dir = "docs/source"
build-dir = "docs/build"

# Security scanning
[tool.safety]
ignore = []
output = "json"

# Dependency checking
[tool.pip-audit]
require-hashes = true
desc = true